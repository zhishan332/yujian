<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<!-- Created with MTool.  -->
<mapper namespace="com.yujian.wq.mapper.ImgWorkMapper">

    <resultMap id="imgMap" type="ImgEntity">
        <id property="id" column="id" jdbcType="INTEGER"/>
        <result property="img" column="img" jdbcType="VARCHAR"/>
        <result property="title" column="title" jdbcType="VARCHAR"/>
        <result property="tagId" column="tag_id" jdbcType="INTEGER"/>
        <result property="chain" column="chain" jdbcType="VARCHAR"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
    </resultMap>

    <resultMap id="imgChainMap" type="ImgChainEntity">
        <id property="id" column="id" jdbcType="INTEGER"/>
        <result property="img" column="img" jdbcType="VARCHAR"/>
        <result property="title" column="title" jdbcType="VARCHAR"/>
        <result property="tagId" column="tag_id" jdbcType="INTEGER"/>
        <result property="chain" column="chain" jdbcType="VARCHAR"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="num" column="num" jdbcType="INTEGER"/>
    </resultMap>

    <insert id="insertImgAndGetId" useGeneratedKeys="true" keyProperty="id" parameterType="ImgEntity">
        insert into img
        (img,tag_id,chain,title,md5)
        values(
        #{img,jdbcType=VARCHAR},
        #{tagId,jdbcType=INTEGER},
        #{chain,jdbcType=VARCHAR},
        #{title,jdbcType=VARCHAR},
        #{md5,jdbcType=VARCHAR}
        )
    </insert>

    <select id="find" resultMap="imgMap">
        select
        id,img,tag_id,title,chain
        from img
        <where>
            tag_id = #{tagId,jdbcType=INTEGER}
        </where>
        order by id desc
        limit #{start,jdbcType=INTEGER},#{num,jdbcType=INTEGER}
    </select>

    <select id="findByChain" resultMap="imgMap">
        select
        id,img,tag_id
        from img
        <where>
            chain = #{chain,jdbcType=VARCHAR}
        </where>
    </select>


    <insert id="insertChain" useGeneratedKeys="true" keyProperty="id" parameterType="ImgChainEntity">
       insert into img_chain
        (img,tag_id,chain,title,md5,num)
        values(
        #{img,jdbcType=VARCHAR},
        #{tagId,jdbcType=INTEGER},
        #{chain,jdbcType=VARCHAR},
        #{title,jdbcType=VARCHAR},
        #{md5,jdbcType=VARCHAR},
        #{num,jdbcType=VARCHAR}
        )
    </insert>

    <select id="findChain" resultMap="imgChainMap">
        select
        id,img,tag_id,title,chain
        from img_chain
        where chain = #{chain,jdbcType=VARCHAR}
        limit 1
    </select>

    <select id="findChainCommon" resultMap="imgChainMap">
        select
        id,img,tag_id,title,chain,num
        from img_chain
        <where>
            num>0
            <if test="chain != null">
                and chain = #{chain,jdbcType=VARCHAR}
            </if>
            <if test="title != null">
                and title like CONCAT('%','${title}','%' )
            </if>
        </where>
        order by id desc
        limit #{start,jdbcType=INTEGER},#{num,jdbcType=INTEGER}
    </select>

    <delete id="deleteChain">
        DELETE from img_chain
        where chain = #{chain,jdbcType=VARCHAR}
    </delete>

    <delete id="deleteImgChain">
        DELETE from img
        where chain = #{chain,jdbcType=VARCHAR}
    </delete>
    <delete id="deleteImg">
        DELETE from img
        where img = #{img,jdbcType=VARCHAR}
    </delete>


    <update id="updateIncreaseChain">
        update img_chain set num = num +1
        where chain = #{chain,jdbcType=VARCHAR}
    </update>

    <update id="updateReduceChain">
        update img_chain set num = num - 1
        where chain = #{chain,jdbcType=VARCHAR}
    </update>


    <select id="findChainByTag" resultMap="imgChainMap">
        select
        id,img,tag_id,title,chain
        from img_chain
        where chain = #{chain,jdbcType=VARCHAR} and tag_id =  #{tagId,jdbcType=INTEGER}
        limit 1
    </select>

    <select id="findChainByTime" resultMap="imgChainMap">
        select
        cc.id,cc.chain,cc.tag_id,bb.img ,cc.title,cc.num
        from img_chain  cc left join img  bb on cc.chain = bb.chain
        having cc.tag_id in(1,3) and cc.num >1
        order by cc.id desc
        limit #{start,jdbcType=INTEGER},#{num,jdbcType=INTEGER}
    </select>


    <select id="findTotal" resultType="java.lang.Integer">
        select
        count(*)
        from img
        where tag_id !=5
    </select>

    <select id="findRandom" resultMap="imgMap">
        select
        id,img,tag_id,title
        from img
        where id in
        <foreach item="item" index="index" collection="list" open="(" separator="," close=")">
            #{item}
        </foreach>
        and tag_id !=5
        limit #{num,jdbcType=INTEGER}
    </select>


    <select id="findNotIn" resultMap="imgMap">
        select
        id,img,tag_id
        from img
        <where>
            tag_id != #{tagId,jdbcType=INTEGER}
        </where>
        order by id desc
        limit #{start,jdbcType=INTEGER},#{num,jdbcType=INTEGER}
    </select>

</mapper>